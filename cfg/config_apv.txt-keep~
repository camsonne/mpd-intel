version = "0.2";  // mandatory

logfile = "out/Daq.log"; // mandatory

loglevel = 0;	// 0=none, 1=normal, 2=debug, 3=verbose, 4=very verbose ...

date = "28/03/2012"; // date format: DD/MM/YYYY

time = "12:00:00";   // time format: hh:mm:ss

// @includeDir ...

@include "cfg/config_apv_default.txt"

bus: // interface to the MPD

(

  {

  controller = "gexvb"; // v1718, v2718, sis3104, eth, fiber 

  mpd:

  ( // list of mpds

    // --- mpd 0

    {

    rotary = 1; // rotary switch setting

    trigger_number = 6;	// 0..15 0: disabled, 1: normal, >1: N apv-readout trigger issued every 3 clock cycles, (that is number of samples)
    apv_SampleMode = 1; // Sampling Mode      : 0=3 samples, 1=1 sample / trigger
    en_trig1_P0 = false;    // Enable TRIG1 line on P0 connector

    calib_latency = 0;     // 0..255: 0: disabled, > 0 issue a calib followed by trigger after given latency

    en_trig2_P0 = false;    // Enable TRIG2 line on P0 connector

    en_trig_Front = true;   // Enable TRIGGER line on Front Panel IN0 lemo connector

    en_sync_P0 = false;     // Enable SYNC line on P0 connector

    en_sync_Front = true;   // Enable SYNC line on Front Panel IN1 lemo connector

    common_noise_subtraction=0; // 0 disabled

    event_building=0; // 0 disabled

    common_offset=0; // 0..4095, offset

    adc:
    (
    { 
       gain = [5, 5, 5, 5, 5, 5, 5, 5];	// (0...12 dB) gain settings for sub-ch 0, 1, 2, ... 7	
       invert = true;
       pattern = "none"; // none, sync, deskew, ramp  
       clock_phase = 0;	 // 0...127 ?? time offset between adc-clock and apv-clock
    },
    { 
       gain = [5, 5, 5, 5, 5, 5, 5, 5];	// (0...12 dB) gain settings for sub-ch 0, 1, 2, ... 7	
       invert = true;
       pattern = "none"; // none, sync, deskew, ramp  
       clock_phase = 0;	 // 0...127 ?? time offset between adc-clock and apv-clock
    });

    zero_level = 700;  //was 700 zero logic below this adc value

    one_level = 2100;  // was 2300 one logic above this adc value

    apv:

    (

      { adc = 6; i2c = 0; },

      { adc = 5; i2c = 1; },

      { adc = 4; i2c = 2; },        /** watch the commas*/

      { adc = 3; i2c = 3; }

    );

    }

  ); // end MPDs

  user: // user specific setting (e.g. additional vme module in bus)
  {
       ioreg: {
          model = "v513";
	  pulse_on = 11;  // set to 11 if you want ioreg to generate the pedestal pulse, or -1 for real trigger 
	  pulse_period = 100000; // minimum microseconds between pulses
       }; // input/output register (veto et al)
  };


}); // end buses



# run parameters



run:

{

  file_prefix = "out/test_apv";	// OUTPUT FILENAME prefix

  mode = "event";	// event, histo, sample, process , in mpd ?

  format = "bin";	// hex, dec, bin

  histo_time = 1;  // second of acquisition for histogramming
  histo_channel_start = 0;	// 0 .. 7
  histo_channel_stop = 7;	// 0 .. 7
  histo_board_start = 0;	// 0 .. 20
  histo_board_stop = 1;	// 0 .. 20

  progress_step = 20;

  time_preset = 60;	// CHANGE ACQUISITION TIME

  event_preset = 10000;	// CHANGE NUMBER OF ACQUIRED EVENTS

  max_retry = 500;	// 0 = disabled

  info = "Info setting"; // comemnt on the run
};

